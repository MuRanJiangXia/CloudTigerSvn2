//
//  RefundDesCell2.m
//  CloudTiger
//
//  Created by cyan on 16/9/18.
//  Copyright © 2016年 cyan. All rights reserved.
//

#import "RefundDesCell2.h"
@interface RefundDesCell2()<UITextFieldDelegate>{
    
    UILabel *tipLab;
    BOOL isHaveDian ;

}
@end
@implementation RefundDesCell2

-(instancetype)initWithFrame:(CGRect)frame{
    self =[super initWithFrame:frame];
    if (self) {
        
        [self createUI];
    }
    return self;
}
- (void)awakeFromNib {
    [super awakeFromNib];
    [self createUI];
    
}
- (instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString *)reuseIdentifier
{
    self = [super initWithStyle:style reuseIdentifier:reuseIdentifier];
    if (self) {
        [self createUI];
        
        
    }
    return self;
}

-(void)setRefundableAmount:(NSString *)refundableAmount{
    _refundableAmount = refundableAmount;
    
    [self relaodView];
    
}

-(void)relaodView{
    tipLab.text = [NSString stringWithFormat:@"(可退%@元)", [CyTools folatByStr:_refundableAmount]];
    
}

-(void)createUI{

    
    UILabel *label  = [[UILabel alloc]initWithFrame:CGRectMake(15, 0, 56, 50)];
//    label.backgroundColor = [UIColor redColor];
    label.text = @"退款金额";
    label.textColor = GrayColor;
    label.textAlignment = NSTextAlignmentLeft;
    label.font = [UIFont systemFontOfSize:14];
    [self.contentView addSubview:label];
    
     _moneyTextField= [[UITextField alloc]initWithFrame:CGRectMake(label.right +10, 0,MainScreenWidth -  label.right -10, 30)];
    _moneyTextField.placeholder = @"输入。。";
//    _moneyTextField.backgroundColor = [UIColor cyanColor];
    _moneyTextField.delegate = self;
    _moneyTextField.keyboardType = UIKeyboardTypeDecimalPad;



    [self.contentView addSubview:_moneyTextField];
    
    
    [_moneyTextField addTarget:self action:@selector(changeValue:) forControlEvents:UIControlEventEditingChanged];
    
    tipLab  = [[UILabel alloc]initWithFrame:CGRectMake(_moneyTextField.left, _moneyTextField.bottom,_moneyTextField.width , 20)];
//    tipLab.backgroundColor = [UIColor redColor];
    
    tipLab.text = @"(可退0.001元)";
    tipLab.textColor = [UIColor blackColor];
    tipLab.textAlignment = NSTextAlignmentRight;
    tipLab.font = [UIFont systemFontOfSize:12];
    [self.contentView addSubview:tipLab];
    
    UIView *lineView = [[UIView alloc]initWithFrame:CGRectMake(0, label.bottom -1, MainScreenWidth, 1)];
    lineView.backgroundColor = PaleColor;
    [self.contentView addSubview:lineView];
    
}
-(void)changeValue:(UITextField *)textField{
    [self reloadTipLab];
    
}

-(void)reloadTipLab{
    //输入
    NSInteger money = [[CyTools interByStr:_moneyTextField.text] integerValue];
    //可退金额
    NSInteger refundAmount = [_refundableAmount integerValue];
    
    NSString *showMonet = [NSString stringWithFormat:@"%ld",refundAmount -money];
    tipLab.text = [NSString stringWithFormat:@"(可退%@元)", [CyTools folatByStr:showMonet]];

    
}

#pragma mark -- UITextFieldDelegate
- (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string{
    
    /*
     //如果输入的是“.”  判断之前已经有"."或者字符串为空
     if ([string isEqualToString:@"."] && ([textField.text rangeOfString:@"."].location != NSNotFound || [textField.text isEqualToString:@""])) {
     return NO;
     }
     //拼出输入完成的str,判断str的长度大于等于“.”的位置＋4,则返回false,此次插入string失败 （"379132.424",长度10,"."的位置6, 10>=6+4）
     NSMutableString *str = [[NSMutableString alloc] initWithString:textField.text];
     [str insertString:string atIndex:range.location];
     if (str.length >= [str rangeOfString:@"."].location+4){
     return NO;
     }
     
     */
    
    if ([string isEqualToString:@"\n"]) {
        [textField resignFirstResponder];
    }
    if ([textField.text rangeOfString:@"."].location == NSNotFound) {
        isHaveDian = NO;
    }
    if ([string length] > 0) {
        
        unichar single = [string characterAtIndex:0];//当前输入的字符
        
        if ((single >= '0' && single <= '9') || single == '.') {//数据格式正确
            
            //首字母不能为0和小数点
            if([textField.text length] == 0){
                if(single == '.') {
//                    [self showError:@"亲，第一个数字不能为小数点"];
                    [textField.text stringByReplacingCharactersInRange:range withString:@""];
                    return NO;
                }
                
            }else{
                
                /**
                 0100
                 0.001
                 */
                //首字母可以是零（第二个位数是小数点），
                unichar first =  [textField.text characterAtIndex:0];
                if (first == '0') {
                    if (textField.text.length >=2) {
                        unichar single2 =  [textField.text characterAtIndex:1];
                        if (single2 == '.') {
            
                        }else{
                            
//                            [self showError:@"亲，第一个数字不能为0,"];
                            [textField.text stringByReplacingCharactersInRange:range withString:@""];
                            return NO;
                        }
                    }else{
                        
                        if (single == '.') {
            
                        }else{
                            
//                            [self showError:@"第一个数字不能为0,"];
                            [textField.text stringByReplacingCharactersInRange:range withString:@""];
                            return NO;
                        }
                    }
                    
                }
                
                
                
                
            }
            
            //输入的字符是否是小数点
            if (single == '.') {
                if(!isHaveDian)//text中还没有小数点
                {
                    isHaveDian = YES;
                    return YES;
                    
                }else{
//                    [self showError:@"亲，您已经输入过小数点了"];
                    [textField.text stringByReplacingCharactersInRange:range withString:@""];
                    return NO;
                }
            }else{
                if (isHaveDian) {//存在小数点
                    
                    //判断小数点的位数
                    NSRange ran = [textField.text rangeOfString:@"."];
                    if (range.location - ran.location <= 2) {
                        return YES;
                    }else{
//                        [self showError:@"亲，您最多输入两位小数"];
                        return NO;
                    }
                }else{
                    return YES;
                }
            }
        }else{//输入的数据格式不正确
//            [self showError:@"亲，您输入的格式不正确"];
            [textField.text stringByReplacingCharactersInRange:range withString:@""];
            return NO;
        }
    }
    else
    {
        return YES;
    }
    

    return YES;
}


- (void)showError:(NSString *)errorString
{
    [SVProgressHUD showErrorWithStatus:errorString];
    [SVProgressHUD dismissWithDelay:.5];
    
}




@end
