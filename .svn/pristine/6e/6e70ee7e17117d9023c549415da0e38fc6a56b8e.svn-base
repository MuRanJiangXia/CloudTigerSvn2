//
//  CodeViewController.m
//  CloudTiger
//
//  Created by cyan on 16/9/19.
//  Copyright © 2016年 cyan. All rights reserved.
//

#import "CodeViewController.h"
#import "CustomQRCode.h"
@interface CodeViewController ()<UITextFieldDelegate>{
    
    UIImageView *codeImageV ;
    UITextField *moneyText;
    NSInteger _btnTag;
    BOOL isHaveDian ;
    
    UILabel *_moneyLab;

}

@end

@implementation CodeViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    self.title = @"二维码支付";
    self.view.backgroundColor = UIColorFromRGB(0xF6F5F9, 1);
    [self creatUI];
    
}

/**
 重写返回方法，收键盘
 */
-(void)backAction{
    [super backAction];
    [moneyText resignFirstResponder];
    
    
}
-(void)creatUI{
    

//    260/70
    CGFloat with = 130 ;
    CGFloat x = (MainScreenWidth - 260)/4.0;
    
    UIView *view = [[UIView alloc]initWithFrame:CGRectMake(0, 0, MainScreenWidth, 70/260.0 * with  + 20)];
    view.backgroundColor = [UIColor whiteColor];
    [self.view addSubview:view];
    
    NSArray *btnArr  = @[@"code_wx_s",@"code_ali_s"];
    NSArray *btnArr2  = @[@"code_wx_n",@"code_ali_n"];

    for (NSInteger index = 0; index < btnArr.count; index++) {
        UIButton *button = [UIButton buttonWithType:UIButtonTypeCustom];
        button.frame = CGRectMake(index * (with + 2 *x) +x , 10, with, 70/260.0 * with);
        button.backgroundColor = [UIColor whiteColor];
        [button addTarget:self action:@selector(payAction:) forControlEvents:UIControlEventTouchUpInside];
        [view addSubview:button];
        [button setBackgroundImage:[UIImage imageNamed:btnArr[index]] forState:UIControlStateSelected];
        [button setBackgroundImage:[UIImage imageNamed:btnArr2[index]] forState:UIControlStateNormal];
        button.tag = 20160919 +index;
        if (index == 0) {
            button.selected = YES;
            _btnTag = button.tag;
        }
    }

    //    750/290
    UIImageView *topBgView = [[UIImageView alloc]initWithFrame:CGRectMake(0, view.bottom+10, MainScreenWidth,  145)];
//    topBgView.backgroundColor = [UIColor yellowColor];
    topBgView.image = [UIImage imageNamed:@"code_viewBg"];
    [self.view addSubview:topBgView];
    
    topBgView.userInteractionEnabled = YES;
    
    UILabel *label  = [[UILabel alloc]initWithFrame:CGRectMake(0, 10, 50, 50)];
//    label.backgroundColor = [UIColor redColor];
    label.text = @"￥";
    label.textColor = [UIColor blackColor];
    label.textAlignment = NSTextAlignmentRight;
    label.font = [UIFont systemFontOfSize:14];
//    [topBgView addSubview:label];
    
    moneyText = [[UITextField alloc]initWithFrame:CGRectMake(15, 5, MainScreenWidth -30, 50)];
    moneyText.placeholder = @"输入金额";
    moneyText.font = [UIFont systemFontOfSize:50];
//    UIKeyboardTypeNumberPad UIKeyboardTypeNumbersAndPunctuation
    moneyText.keyboardType = UIKeyboardTypeNumbersAndPunctuation;
    moneyText.textAlignment = NSTextAlignmentCenter;

    moneyText.delegate = self;
    [topBgView addSubview:moneyText];
    
    [moneyText addTarget:self action:@selector(changeValue:) forControlEvents:UIControlEventEditingChanged];

    
    /**
     监听textfield 的text变化，加上 ￥
     */
    
    _moneyLab = [[UILabel alloc]initWithFrame:CGRectMake(0, 20, 20, 30)];
    //    _moneyLab.backgroundColor = [UIColor redColor];
    _moneyLab.text = @"￥";
    _moneyLab.textColor = [UIColor blackColor];
    _moneyLab.textAlignment = NSTextAlignmentCenter;
    //    _moneyLab.center = moneyText.center;
    _moneyLab.font = [UIFont systemFontOfSize:14];
    _moneyLab.hidden = YES;
    [moneyText addSubview:_moneyLab];

    //    230/230
    //二维码btn
    UIButton *button = [UIButton buttonWithType:UIButtonTypeCustom];
    button.frame = CGRectMake((MainScreenWidth - 115)/2.0, 0, 115, 115);
//    button.backgroundColor = [UIColor purpleColor];
    [button setBackgroundImage:[UIImage imageNamed:@"code_n"] forState:UIControlStateNormal];
    [button addTarget:self action:@selector(codeAction:) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:button];
    button.center = CGPointMake(button.center.x, topBgView.bottom);
    
    //二维码显示
//    438 /438
    UIImageView *imageView = [[UIImageView alloc]initWithFrame:CGRectMake((MainScreenWidth -219)/2.0, button.bottom + 20, 219, 219)];
//    imageView.backgroundColor = [UIColor cyanColor];
    imageView.image = [UIImage imageNamed:@"code_bg"];
    [self.view addSubview:imageView];

    
    codeImageV = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 200, 200)];
//    codeImageV.backgroundColor = [UIColor yellowColor];
//    codeImageV.image = [UIImage imageNamed:@""];
    [self.view addSubview:codeImageV];

    codeImageV.center = imageView.center;
  
 
    
    
}
#pragma mark TextField ChangeValue

-(void)changeValue:(UITextField *)textField{
    NSLog(@"textField.text :%@",textField.text);
    if (!textField.text.length) {
        _moneyLab.hidden = YES;
    }else{
        _moneyLab.hidden = NO;

        CGSize textSize = [moneyText.text sizeWithAttributes:@{NSFontAttributeName:moneyText.font}] ;
        NSLog(@"width : %f,height :%f",textSize.width,textSize.height);
        CGFloat  with =     (  textField.frame.size.width  - textSize.width)/2.0 -20 ;
        _moneyLab.left = with;
    }
    
    
}
-(void)payAction:(UIButton *)btn{
    
    NSLog(@"切换btn");
    
    btn.selected = YES;
    if (_btnTag!= 0) {
        if (_btnTag != btn.tag) {
            UIButton *preBtn =   [self.view viewWithTag:_btnTag];
            preBtn.selected = !preBtn.selected;
            //清空一下 二维码图片
            codeImageV.image = [CyTools imageWithColor:[UIColor clearColor]];
        }
    }
    _btnTag = btn.tag;
    
}


-(void)codeAction:(UIButton *)btn{

    
    NSLog(@"二维码");
    
//    UIImage *codeImage =   [CustomQRCode generateCustomQRCode:@"Description" andSize:200.f andColor:  [UIColor colorWithRed:0.0 green:0.0 blue:0.0 alpha:1]];
//    codeImageV.image = codeImage;
    [moneyText resignFirstResponder];
    [self postCode];
}

-(void)postCode{
    
    if (!moneyText.text.length) {
        
//        [self showSVPErrorStatus:@"输入为空"];
        [MessageView showMessage:@"输入为空"];
        return;
    }
    if ([moneyText.text floatValue] <= 0.0) {
        [MessageView showMessage:@"输入金额为0"];

        return;
    }
    [self showSVPByStatus:@"加载中。。"];
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];
    manager.requestSerializer = [AFHTTPRequestSerializer serializer];
    //manager.responseSerializer.acceptableContentTypes=[NSSet setWithObjects:@"text/html", nil];
    //设置请求头 压缩
    [manager.requestSerializer setValue:@"gzip" forHTTPHeaderField:@"Accept-Encoding"];
    [manager.requestSerializer setTimeoutInterval:40];
    NSString *money =   [CyTools interByStr:moneyText.text];
    CyanManager *mangager = [CyanManager shareSingleTon];
    
//    total_fee 1为0.01元
    NSDictionary *parameters  = @{
                                  @"total_fee":money,
                                  @"systemUserSysNo":mangager.sysNO
                                  };
    NSString *url = [NSString stringWithFormat:@""];
    if (_btnTag - 20160919 == 0) {  //微信
        url  = [BaseUrl stringByAppendingString:GetWXCodeUrl];
        
    }else{  // 支付宝
        url  = [BaseUrl stringByAppendingString:GetAliCodeUrl];


    }

    [manager POST:url parameters:parameters progress:^(NSProgress * _Nonnull uploadProgress) {
        
    } success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        [self dismissSVP];
        NSLog(@"responseObject :%@",responseObject);
        NSInteger Code = [responseObject[@"Code"] integerValue];
        if (Code == 0) {
            NSString *Description = responseObject[@"Description"];
            UIImage *codeImage =   [CustomQRCode generateCustomQRCode:Description andSize:200.f andColor:[UIColor colorWithRed:0.0 green:0.0 blue:0.0 alpha:1]];
            codeImageV.image = codeImage;
        }else{
            [MessageView showMessage:@"请求错误"];

            NSLog(@"请求错误");
        }
     
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        [self dismissSVP];
        [MessageView showMessage:@"请求失败"];

        NSLog(@"请求失败");
    }];
}


#pragma mark UITextFieldDelegate
- (void)textFieldDidEndEditing:(UITextField *)textField{
    NSLog(@"%s",__FUNCTION__);
    if (textField.text.length) {
        if (![textField.text containsString:@"."]) {
            textField.text = [NSString stringWithFormat:@"%@.00",textField.text];
            _moneyLab.hidden = NO;
            CGSize textSize = [moneyText.text sizeWithAttributes:@{NSFontAttributeName:moneyText.font}] ;
            NSLog(@"width : %f,height :%f",textSize.width,textSize.height);
            CGFloat  with =     (  textField.frame.size.width  - textSize.width)/2.0 -20 ;
            _moneyLab.left = with;
        }
    }

    
    
}
- (BOOL)textFieldShouldReturn:(UITextField *)textField{
    NSLog(@"%s",__FUNCTION__);
    
    [textField resignFirstResponder];
    return YES;
}
/**
 12 3456.00
 
 */
- (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string{
    
    /*
     //如果输入的是“.”  判断之前已经有"."或者字符串为空
     if ([string isEqualToString:@"."] && ([textField.text rangeOfString:@"."].location != NSNotFound || [textField.text isEqualToString:@""])) {
     return NO;
     }
     //拼出输入完成的str,判断str的长度大于等于“.”的位置＋4,则返回false,此次插入string失败 （"379132.424",长度10,"."的位置6, 10>=6+4）
     NSMutableString *str = [[NSMutableString alloc] initWithString:textField.text];
     [str insertString:string atIndex:range.location];
     if (str.length >= [str rangeOfString:@"."].location+4){
     return NO;
     }
     
     */
    if ([textField.text rangeOfString:@"."].location == NSNotFound) {
        isHaveDian = NO;
    }
    if ([string length] > 0) {
        
        unichar single = [string characterAtIndex:0];//当前输入的字符
        
        if ((single >= '0' && single <= '9') || single == '.') {//数据格式正确
            
            //首字母不能为0和小数点
            if([textField.text length] == 0){
                if(single == '.') {
                    //                    [self showError:@"亲，第一个数字不能为小数点"];
                    [textField.text stringByReplacingCharactersInRange:range withString:@""];
                    return NO;
                }
                
            }else{
                
                /**
                 0100
                 0.001
                 */
                //首字母可以是零（第二个位数是小数点），
                unichar first =  [textField.text characterAtIndex:0];
                if (first == '0') {
                    if (textField.text.length >=2) {
                        unichar single2 =  [textField.text characterAtIndex:1];
                        if (single2 == '.') {
                            
                        }else{
                            
                            //                            [self showError:@"亲，第一个数字不能为0,"];
                            [textField.text stringByReplacingCharactersInRange:range withString:@""];
                            return NO;
                        }
                    }else{
                        
                        if (single == '.') {
                            
                        }else{
                            
                            //                            [self showError:@"第一个数字不能为0,"];
                            [textField.text stringByReplacingCharactersInRange:range withString:@""];
                            return NO;
                        }
                    }
                    
                }
                
            }
            
            //输入的字符是否是小数点
            if (single == '.') {
                if(!isHaveDian)//text中还没有小数点
                {
                    
                    isHaveDian = YES;
                    return YES;
                    
                }else{
                    //                    [self showError:@"亲，您已经输入过小数点了"];
                    [textField.text stringByReplacingCharactersInRange:range withString:@""];
                    return NO;
                }
            }else{
                if (isHaveDian) {//存在小数点
                    
                    //判断小数点的位数
                    NSRange ran = [textField.text rangeOfString:@"."];
                    if (range.location - ran.location <= 2) {
                        
                        //有小数点 不能输入超过 10 0000 ；
                        if (textField.text.length >= 3 + 6) {
                            NSLog(@"没有小数点 不能输入超过 10 0000 ");
                            return NO;
                        }
                        return YES;
                        
                    }else{
                        //                        [self showError:@"亲，您最多输入两位小数"];
                        return NO;
                    }
                    
                }else{
                    //没有小数点 不能输入超过 10 0000 ；
                    if (textField.text.length >= 6) {
                        NSLog(@"没有小数点 不能输入超过 10 0000 ");
                        return NO;
                    }
                    return YES;
                }
            }
        }else{//输入的数据格式不正确
            //            [self showError:@"亲，您输入的格式不正确"];
            [textField.text stringByReplacingCharactersInRange:range withString:@""];
            return NO;
        }
    }
    else
    {
        return YES;
    }
    return YES;
}
- (void)showError:(NSString *)errorString
{

    [SVProgressHUD showErrorWithStatus:errorString];
    // setMinimumDismissTimeInterval 要和 提示字符串长度作比较 时间长的是消失时间
    [SVProgressHUD setMinimumDismissTimeInterval:1];

    [SVProgressHUD setKeyBoardMove:NO];
    
    
    [moneyText resignFirstResponder];
}

-(void)playDiss{
     [self dismissSVP];
}


@end
