//
//  CodePayViewController.m
//  CloudTiger
//
//  Created by cyan on 16/9/23.
//  Copyright © 2016年 cyan. All rights reserved.
//

#import "CodePayViewController.h"
#import "SYQRCodeViewController.h"
#import "CodePostViewController.h"
@interface CodePayViewController ()<UITextFieldDelegate>{
    
    UIImageView *codeImageV ;
    UITextField *moneyText;
    NSInteger _btnTag;
    BOOL isHaveDian ;
    
    UILabel *_moneyLab;

}

@end

@implementation CodePayViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    self.title = @"智能扫码";
    self.view.backgroundColor = UIColorFromRGB(0xF6F5F9, 1);
    [self createUI];

}
/**
 重写返回方法，收键盘
 */
-(void)backAction{
    [super backAction];
    [moneyText resignFirstResponder];
    
    
}
-(void)createUI{
    
    //    750/290
    UIImageView *topBgView = [[UIImageView alloc]initWithFrame:CGRectMake(0, 10, MainScreenWidth,  145)];
    //    topBgView.backgroundColor = [UIColor yellowColor];
    topBgView.image = [UIImage imageNamed:@"code_viewBg"];
    [self.view addSubview:topBgView];
    
    topBgView.userInteractionEnabled = YES;
    
    UILabel *label  = [[UILabel alloc]initWithFrame:CGRectMake(0, 10, 50, 50)];
    //    label.backgroundColor = [UIColor redColor];
    label.text = @"￥";
    label.textColor = [UIColor blackColor];
    label.textAlignment = NSTextAlignmentRight;
    label.font = [UIFont systemFontOfSize:14];
//    [topBgView addSubview:label];
    
    moneyText = [[UITextField alloc]initWithFrame:CGRectMake(15, 5, MainScreenWidth -30, 50)];
    moneyText.placeholder = @"输入金额";
    moneyText.font = [UIFont systemFontOfSize:50];
//    moneyText.backgroundColor = [UIColor cyanColor];
    //    UIKeyboardTypeNumberPad UIKeyboardTypeNumbersAndPunctuation
    moneyText.keyboardType = UIKeyboardTypeNumbersAndPunctuation;
    moneyText.delegate = self;
    moneyText.textAlignment = NSTextAlignmentCenter;
    [topBgView addSubview:moneyText];
    
    [moneyText addTarget:self action:@selector(changeValue:) forControlEvents:UIControlEventEditingChanged];
    
    
    /**
     监听textfield 的text变化，加上 ￥
     */
    
    _moneyLab = [[UILabel alloc]initWithFrame:CGRectMake(0, 20, 20, 30)];
    //    _moneyLab.backgroundColor = [UIColor redColor];
    _moneyLab.text = @"￥";
    _moneyLab.textColor = [UIColor blackColor];
    _moneyLab.textAlignment = NSTextAlignmentCenter;
    //    _moneyLab.center = moneyText.center;
    _moneyLab.font = [UIFont systemFontOfSize:14];
    _moneyLab.hidden = YES;
    [moneyText addSubview:_moneyLab];


    
    //    230/230
    //二维码btn
    UIButton *button = [UIButton buttonWithType:UIButtonTypeCustom];
    button.frame = CGRectMake((MainScreenWidth - 115)/2.0, 0, 115, 115);
    //    button.backgroundColor = [UIColor purpleColor];
    [button setBackgroundImage:[UIImage imageNamed:@"scan_code_n"] forState:UIControlStateNormal];
    [button addTarget:self action:@selector(codeAction:) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:button];
    button.center = CGPointMake(button.center.x, topBgView.bottom);
}

#pragma mark TextField ChangeValue
-(void)changeValue:(UITextField *)textField{
    NSLog(@"textField.text :%@",textField.text);
    if (!textField.text.length) {
        _moneyLab.hidden = YES;
    }else{
        _moneyLab.hidden = NO;
        
        CGSize textSize = [moneyText.text sizeWithAttributes:@{NSFontAttributeName:moneyText.font}] ;
        NSLog(@"width : %f,height :%f",textSize.width,textSize.height);
        CGFloat  with =     (  textField.frame.size.width  - textSize.width)/2.0 -20 ;
        _moneyLab.left = with;
    }
    
    
}
-(void)codeAction:(UIButton *)btn{
    
    NSLog(@"扫描二维码");
    [moneyText resignFirstResponder];
    
//    
//    if (moneyText.text.length == 0) {
//        NSLog(@"输入金额为 0");
//
//        return;
//    }
//    
//    if ([moneyText.text isEqualToString:@"0"] || [moneyText.text isEqualToString:@"0."]||[moneyText.text isEqualToString:@"0.0"]||[moneyText.text isEqualToString:@"0.00"]) {
//        
//        NSLog(@"输入金额为 0");
//        return;
//    }
    
    
    if (!moneyText.text.length) {
        
        //        [self showSVPErrorStatus:@"输入为空"];
        [MessageView showMessage:@"输入为空"];
        return;
    }
    if ([moneyText.text floatValue] <= 0.0) {
        [MessageView showMessage:@"输入金额为0"];
        
        return;
    }
    //扫描二维码
    SYQRCodeViewController *qrcodevc = [[SYQRCodeViewController alloc] init];
    
    
    qrcodevc.SYQRCodeSuncessBlock = ^(SYQRCodeViewController *aqrvc,NSString *qrString){
        NSLog(@"扫码成功");
        CodePostViewController *codePost = [CodePostViewController new];
        codePost.hidesBottomBarWhenPushed  = YES;
        codePost.codeStr = qrString;
        codePost.moneyStr = moneyText.text;
        
        [self.navigationController pushViewController:codePost animated:YES];
        
   
        [aqrvc dismissViewControllerAnimated:YES completion:nil];

      

        
    };
    qrcodevc.SYQRCodeFailBlock = ^(SYQRCodeViewController *aqrvc){
        NSLog(@"扫码失败");
        [aqrvc dismissViewControllerAnimated:YES completion:nil];
    };
    qrcodevc.SYQRCodeCancleBlock = ^(SYQRCodeViewController *aqrvc){
        
        NSLog(@"扫码取消");
        
        [aqrvc dismissViewControllerAnimated:YES completion:nil];
        
    };
    [self presentViewController:qrcodevc animated:YES completion:nil];
}

#pragma mark UITextFieldDelegate

- (void)textFieldDidEndEditing:(UITextField *)textField{
    NSLog(@"%s",__FUNCTION__);
    if (textField.text.length) {
        if (![textField.text containsString:@"."]) {
            textField.text = [NSString stringWithFormat:@"%@.00",textField.text];
            _moneyLab.hidden = NO;
            CGSize textSize = [moneyText.text sizeWithAttributes:@{NSFontAttributeName:moneyText.font}] ;
            NSLog(@"width : %f,height :%f",textSize.width,textSize.height);
            CGFloat  with =     (  textField.frame.size.width  - textSize.width)/2.0 -20 ;
            _moneyLab.left = with;
        }
    }
    
    
    
}
- (BOOL)textFieldShouldReturn:(UITextField *)textField{
    NSLog(@"%s",__FUNCTION__);
    
    [textField resignFirstResponder];
    return YES;
}
/**
 12 3456.00
 
 */
- (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string{
    
    /*
     //如果输入的是“.”  判断之前已经有"."或者字符串为空
     if ([string isEqualToString:@"."] && ([textField.text rangeOfString:@"."].location != NSNotFound || [textField.text isEqualToString:@""])) {
     return NO;
     }
     //拼出输入完成的str,判断str的长度大于等于“.”的位置＋4,则返回false,此次插入string失败 （"379132.424",长度10,"."的位置6, 10>=6+4）
     NSMutableString *str = [[NSMutableString alloc] initWithString:textField.text];
     [str insertString:string atIndex:range.location];
     if (str.length >= [str rangeOfString:@"."].location+4){
     return NO;
     }
     
     */
    if ([textField.text rangeOfString:@"."].location == NSNotFound) {
        isHaveDian = NO;
    }
    if ([string length] > 0) {
        
        unichar single = [string characterAtIndex:0];//当前输入的字符
        
        if ((single >= '0' && single <= '9') || single == '.') {//数据格式正确
            
            //首字母不能为0和小数点
            if([textField.text length] == 0){
                if(single == '.') {
//                    [self showError:@"亲，第一个数字不能为小数点"];
                    [textField.text stringByReplacingCharactersInRange:range withString:@""];
                    return NO;
                }
                
            }else{
                
                /**
                 0100
                 0.001
                 */
                //首字母可以是零（第二个位数是小数点），
                unichar first =  [textField.text characterAtIndex:0];
                if (first == '0') {
                    if (textField.text.length >=2) {
                        unichar single2 =  [textField.text characterAtIndex:1];
                        if (single2 == '.') {
                            
                        }else{
                            
//                            [self showError:@"亲，第一个数字不能为0,"];
                            [textField.text stringByReplacingCharactersInRange:range withString:@""];
                            return NO;
                        }
                    }else{
                        
                        if (single == '.') {
                            
                        }else{
                            
//                            [self showError:@"第一个数字不能为0,"];
                            [textField.text stringByReplacingCharactersInRange:range withString:@""];
                            return NO;
                        }
                    }
                    
                }
                
            }
            
            //输入的字符是否是小数点
            if (single == '.') {
                if(!isHaveDian)//text中还没有小数点
                {
              
                    isHaveDian = YES;
                    return YES;
                    
                }else{
//                    [self showError:@"亲，您已经输入过小数点了"];
                    [textField.text stringByReplacingCharactersInRange:range withString:@""];
                    return NO;
                }
            }else{
                if (isHaveDian) {//存在小数点
                    
                    //判断小数点的位数
                    NSRange ran = [textField.text rangeOfString:@"."];
                    if (range.location - ran.location <= 2) {
                        
                        //有小数点 不能输入超过 10 0000 ；
                        if (textField.text.length >= 3 + 6) {
                            NSLog(@"没有小数点 不能输入超过 10 0000 ");
                            return NO;
                        }
                        return YES;
                        
                    }else{
//                        [self showError:@"亲，您最多输入两位小数"];
                        return NO;
                    }
                    
                }else{
                    //没有小数点 不能输入超过 10 0000 ；
                    if (textField.text.length >= 6) {
                        NSLog(@"没有小数点 不能输入超过 10 0000 ");
                        return NO;
                    }
                    return YES;
                }
            }
        }else{//输入的数据格式不正确
//            [self showError:@"亲，您输入的格式不正确"];
            [textField.text stringByReplacingCharactersInRange:range withString:@""];
            return NO;
        }
    }
    else
    {
        return YES;
    }
    return YES;
}

- (void)showError:(NSString *)errorString
{
    //    [self alterWith:errorString];
    //
    //    [NSTimer scheduledTimerWithTimeInterval:2.0f target:self selector:@selector(removeErrorView2) userInfo:nil repeats:NO];
    [self showSVPErrorStatus:errorString];
    [self performSelector:@selector(playDiss) withObject:nil afterDelay:1];
    [moneyText resignFirstResponder];
}

-(void)playDiss{
    [self dismissSVP];
}


@end
